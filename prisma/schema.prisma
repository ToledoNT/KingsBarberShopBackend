generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Profissional {
  id                  String              @id @default(auto()) @map("_id") @db.ObjectId
  nome                String
  email               String
  telefone            String
  criadoEm            DateTime            @default(now())
  atualizadoEm        DateTime            @updatedAt
  procedimentos       Procedimento[]
  agendamentos        Agendamento[]
  horariosDisponiveis HorarioDisponivel[]
}

model Procedimento {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  nome            String
  valor           Float
  criadoEm        DateTime      @default(now())
  atualizadoEm    DateTime      @updatedAt
  profissionalId  String?       @db.ObjectId
  profissional    Profissional? @relation(fields: [profissionalId], references: [id])
  agendamentos    Agendamento[]
}

model HorarioDisponivel {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  profissionalId  String        @db.ObjectId
  profissional    Profissional  @relation(fields: [profissionalId], references: [id])
  data            DateTime
  inicio          String
  fim             String
  disponivel      Boolean       @default(false) // ✅ controla se o horário está livre
  criadoEm        DateTime      @default(now())
  atualizadoEm    DateTime      @updatedAt
}

model Agendamento {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  nome           String
  telefone       String
  email          String
  data           DateTime
  hora           String
  servicoId      String        @db.ObjectId
  servico        Procedimento  @relation(fields: [servicoId], references: [id])
  profissionalId String        @db.ObjectId
  profissional   Profissional  @relation(fields: [profissionalId], references: [id])
  status         String        @default("Pendente")
  criadoEm       DateTime      @default(now())
  atualizadoEm   DateTime      @updatedAt
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String   @unique
  password     String
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
}

model Log {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  value     String
  createdAt DateTime @default(now())
}